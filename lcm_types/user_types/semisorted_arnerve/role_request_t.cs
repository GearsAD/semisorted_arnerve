/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace semisorted_arnerve
{
    public sealed class role_request_t : LCM.LCM.LCMEncodable
    {
        public long timestamp;
        public String userName;
        public byte requestedRole;
        public byte isUpdatingRole;
        public String newPlannerGroup;
        public byte isUpdatingPlannerGroup;
        public String requestedBotNameToPilot;
        public byte isUpdatingBot;
 
        public role_request_t()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0x910e43bdfe15bd39L;
 
        public const int Observer = 0;
        public const int Pilot = 1;
        public const int Planner = 2;
        public const int Commander = 3;

        static role_request_t()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("semisorted_arnerve.role_request_t"))
                return 0L;
 
            classes.Add("semisorted_arnerve.role_request_t");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            byte[] __strbuf = null;
            outs.Write(this.timestamp); 
 
            __strbuf = System.Text.Encoding.GetEncoding("US-ASCII").GetBytes(this.userName); outs.Write(__strbuf.Length+1); outs.Write(__strbuf, 0, __strbuf.Length); outs.Write((byte) 0); 
 
            outs.Write(this.requestedRole); 
 
            outs.Write(this.isUpdatingRole); 
 
            __strbuf = System.Text.Encoding.GetEncoding("US-ASCII").GetBytes(this.newPlannerGroup); outs.Write(__strbuf.Length+1); outs.Write(__strbuf, 0, __strbuf.Length); outs.Write((byte) 0); 
 
            outs.Write(this.isUpdatingPlannerGroup); 
 
            __strbuf = System.Text.Encoding.GetEncoding("US-ASCII").GetBytes(this.requestedBotNameToPilot); outs.Write(__strbuf.Length+1); outs.Write(__strbuf, 0, __strbuf.Length); outs.Write((byte) 0); 
 
            outs.Write(this.isUpdatingBot); 
 
        }
 
        public role_request_t(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public role_request_t(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static semisorted_arnerve.role_request_t _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            semisorted_arnerve.role_request_t o = new semisorted_arnerve.role_request_t();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            byte[] __strbuf = null;
            this.timestamp = ins.ReadInt64();
 
            __strbuf = new byte[ins.ReadInt32()-1]; ins.ReadFully(__strbuf); ins.ReadByte(); this.userName = System.Text.Encoding.GetEncoding("US-ASCII").GetString(__strbuf);
 
            this.requestedRole = ins.ReadByte();
 
            this.isUpdatingRole = ins.ReadByte();
 
            __strbuf = new byte[ins.ReadInt32()-1]; ins.ReadFully(__strbuf); ins.ReadByte(); this.newPlannerGroup = System.Text.Encoding.GetEncoding("US-ASCII").GetString(__strbuf);
 
            this.isUpdatingPlannerGroup = ins.ReadByte();
 
            __strbuf = new byte[ins.ReadInt32()-1]; ins.ReadFully(__strbuf); ins.ReadByte(); this.requestedBotNameToPilot = System.Text.Encoding.GetEncoding("US-ASCII").GetString(__strbuf);
 
            this.isUpdatingBot = ins.ReadByte();
 
        }
 
        public semisorted_arnerve.role_request_t Copy()
        {
            semisorted_arnerve.role_request_t outobj = new semisorted_arnerve.role_request_t();
            outobj.timestamp = this.timestamp;
 
            outobj.userName = this.userName;
 
            outobj.requestedRole = this.requestedRole;
 
            outobj.isUpdatingRole = this.isUpdatingRole;
 
            outobj.newPlannerGroup = this.newPlannerGroup;
 
            outobj.isUpdatingPlannerGroup = this.isUpdatingPlannerGroup;
 
            outobj.requestedBotNameToPilot = this.requestedBotNameToPilot;
 
            outobj.isUpdatingBot = this.isUpdatingBot;
 
            return outobj;
        }
    }
}

