/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

package semisorted_arnerve;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class user_update_t implements lcm.lcm.LCMEncodable
{
    public long timestamp;
    public String name;
    public byte role;
    public String pilotcraft;
    public String plannergroup;
    public semisorted_arnerve.kinect_update_t kinect;
    public semisorted_arnerve.oculus_update_t oculus;
    public semisorted_arnerve.wearable_update_t wearable;
 
    public user_update_t()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0x7771dcc02708970eL;
 
    public static final byte Observer = (byte) 0;
    public static final byte Pilot = (byte) 1;
    public static final byte Planner = (byte) 2;
    public static final byte Commander = (byte) 3;

    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(semisorted_arnerve.user_update_t.class))
            return 0L;
 
        classes.add(semisorted_arnerve.user_update_t.class);
        long hash = LCM_FINGERPRINT_BASE
             + semisorted_arnerve.kinect_update_t._hashRecursive(classes)
             + semisorted_arnerve.oculus_update_t._hashRecursive(classes)
             + semisorted_arnerve.wearable_update_t._hashRecursive(classes)
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        char[] __strbuf = null;
        outs.writeLong(this.timestamp); 
 
        __strbuf = new char[this.name.length()]; this.name.getChars(0, this.name.length(), __strbuf, 0); outs.writeInt(__strbuf.length+1); for (int _i = 0; _i < __strbuf.length; _i++) outs.write(__strbuf[_i]); outs.writeByte(0); 
 
        outs.writeByte(this.role); 
 
        __strbuf = new char[this.pilotcraft.length()]; this.pilotcraft.getChars(0, this.pilotcraft.length(), __strbuf, 0); outs.writeInt(__strbuf.length+1); for (int _i = 0; _i < __strbuf.length; _i++) outs.write(__strbuf[_i]); outs.writeByte(0); 
 
        __strbuf = new char[this.plannergroup.length()]; this.plannergroup.getChars(0, this.plannergroup.length(), __strbuf, 0); outs.writeInt(__strbuf.length+1); for (int _i = 0; _i < __strbuf.length; _i++) outs.write(__strbuf[_i]); outs.writeByte(0); 
 
        this.kinect._encodeRecursive(outs); 
 
        this.oculus._encodeRecursive(outs); 
 
        this.wearable._encodeRecursive(outs); 
 
    }
 
    public user_update_t(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public user_update_t(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static semisorted_arnerve.user_update_t _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        semisorted_arnerve.user_update_t o = new semisorted_arnerve.user_update_t();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        char[] __strbuf = null;
        this.timestamp = ins.readLong();
 
        __strbuf = new char[ins.readInt()-1]; for (int _i = 0; _i < __strbuf.length; _i++) __strbuf[_i] = (char) (ins.readByte()&0xff); ins.readByte(); this.name = new String(__strbuf);
 
        this.role = ins.readByte();
 
        __strbuf = new char[ins.readInt()-1]; for (int _i = 0; _i < __strbuf.length; _i++) __strbuf[_i] = (char) (ins.readByte()&0xff); ins.readByte(); this.pilotcraft = new String(__strbuf);
 
        __strbuf = new char[ins.readInt()-1]; for (int _i = 0; _i < __strbuf.length; _i++) __strbuf[_i] = (char) (ins.readByte()&0xff); ins.readByte(); this.plannergroup = new String(__strbuf);
 
        this.kinect = semisorted_arnerve.kinect_update_t._decodeRecursiveFactory(ins);
 
        this.oculus = semisorted_arnerve.oculus_update_t._decodeRecursiveFactory(ins);
 
        this.wearable = semisorted_arnerve.wearable_update_t._decodeRecursiveFactory(ins);
 
    }
 
    public semisorted_arnerve.user_update_t copy()
    {
        semisorted_arnerve.user_update_t outobj = new semisorted_arnerve.user_update_t();
        outobj.timestamp = this.timestamp;
 
        outobj.name = this.name;
 
        outobj.role = this.role;
 
        outobj.pilotcraft = this.pilotcraft;
 
        outobj.plannergroup = this.plannergroup;
 
        outobj.kinect = this.kinect.copy();
 
        outobj.oculus = this.oculus.copy();
 
        outobj.wearable = this.wearable.copy();
 
        return outobj;
    }
 
}

