"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

import cStringIO as StringIO
import struct

import user_update_t

class herder_user_t(object):
    __slots__ = ["timestamp", "NUM_USERS", "users"]

    def __init__(self):
        self.timestamp = 0
        self.NUM_USERS = 0
        self.users = []

    def encode(self):
        buf = StringIO.StringIO()
        buf.write(herder_user_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">qh", self.timestamp, self.NUM_USERS))
        for i0 in range(self.NUM_USERS):
            assert self.users[i0]._get_packed_fingerprint() == user_update_t.user_update_t._get_packed_fingerprint()
            self.users[i0]._encode_one(buf)

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = StringIO.StringIO(data)
        if buf.read(8) != herder_user_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return herder_user_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = herder_user_t()
        self.timestamp, self.NUM_USERS = struct.unpack(">qh", buf.read(10))
        self.users = []
        for i0 in range(self.NUM_USERS):
            self.users.append(user_update_t.user_update_t._decode_one(buf))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if herder_user_t in parents: return 0
        newparents = parents + [herder_user_t]
        tmphash = (0x6c1e8b1b6b5c3ffc+ user_update_t.user_update_t._get_hash_recursive(newparents)) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if herder_user_t._packed_fingerprint is None:
            herder_user_t._packed_fingerprint = struct.pack(">Q", herder_user_t._get_hash_recursive([]))
        return herder_user_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

