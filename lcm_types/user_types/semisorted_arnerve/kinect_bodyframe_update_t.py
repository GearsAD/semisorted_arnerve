"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

import cStringIO as StringIO
import struct

import kinect_joint_t

class kinect_bodyframe_update_t(object):
    __slots__ = ["bodyjoints"]

    SpineBase = 0
    SpineMid = 1
    Neck = 2
    Head = 3
    ShoulderLeft = 4
    ElbowLeft = 5
    WristLeft = 6
    HandLeft = 7
    ShoulderRight = 8
    ElbowRight = 9
    WristRight = 10
    HandRight = 11
    HipLeft = 12
    KneeLeft = 13
    AnkleLeft = 14
    FootLeft = 15
    HipRight = 16
    KneeRight = 17
    AnkleRight = 18
    FootRight = 19
    SpineShoulder = 20
    HandTipLeft = 21
    ThumbLeft = 22
    HandTipRight = 23
    ThumbRight = 24

    def __init__(self):
        self.bodyjoints = [ None for dim0 in range(25) ]

    def encode(self):
        buf = StringIO.StringIO()
        buf.write(kinect_bodyframe_update_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        for i0 in range(25):
            assert self.bodyjoints[i0]._get_packed_fingerprint() == kinect_joint_t.kinect_joint_t._get_packed_fingerprint()
            self.bodyjoints[i0]._encode_one(buf)

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = StringIO.StringIO(data)
        if buf.read(8) != kinect_bodyframe_update_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return kinect_bodyframe_update_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = kinect_bodyframe_update_t()
        self.bodyjoints = []
        for i0 in range(25):
            self.bodyjoints.append(kinect_joint_t.kinect_joint_t._decode_one(buf))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if kinect_bodyframe_update_t in parents: return 0
        newparents = parents + [kinect_bodyframe_update_t]
        tmphash = (0x833951cac4a4f9e8+ kinect_joint_t.kinect_joint_t._get_hash_recursive(newparents)) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if kinect_bodyframe_update_t._packed_fingerprint is None:
            kinect_bodyframe_update_t._packed_fingerprint = struct.pack(">Q", kinect_bodyframe_update_t._get_hash_recursive([]))
        return kinect_bodyframe_update_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

